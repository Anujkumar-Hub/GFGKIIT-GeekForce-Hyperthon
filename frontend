<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Career Path Predictor</title>
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
            color: #fff;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100vh;
            overflow: hidden;
            flex-direction: column;
        }
        .container {
            width: 400px;
            background: rgba(255, 255, 255, 0.1);
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(10px);
        }
        .container h1 {
            text-align: center;
            font-size: 24px;
            margin-bottom: 20px;
        }
        .section {
            margin-bottom: 20px;
        }
        .section h2 {
            font-size: 18px;
            margin-bottom: 10px;
        }
        .section input {
            width: calc(100% - 20px);
            padding: 10px;
            margin-bottom: 10px;
            border: none;
            border-radius: 10px;
            outline: none;
            font-size: 16px;
        }
        button {
            width: calc(100% - 20px);
            padding: 10px;
            border: none;
            border-radius: 10px;
            background: #4caf50;
            color: #fff;
            font-size: 18px;
            cursor: pointer;
            transition: background 0.3s ease;
        }
        button:hover {
            background: #45a049;
        }
        .result-box {
            position: fixed;
            bottom: -100px;
            left: 50%;
            transform: translateX(-50%);
            width: 80%;
            max-width: 400px;
            background: rgba(0, 0, 0, 0.8);
            color: #fff;
            text-align: center;
            padding: 15px;
            border-radius: 10px;
            box-shadow: 0 4px 30px rgba(0, 0, 0, 0.2);
            transition: bottom 0.5s ease-in-out;
        }
        .result-box.show {
            bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Career Path Predictor</h1>
        
        <div class="section">
            <h2>Skills</h2>
            <input type="text" id="skills" placeholder="Enter 5 skills, separated by commas" />
        </div>
        
        <div class="section">
            <h2>Interests</h2>
            <input type="text" id="interests" placeholder="Enter 5 interests, separated by commas" />
        </div>
        
        <button onclick="predictCareer()">Predict Career</button>
    </div>

    <div id="result-box" class="result-box"></div>

    <script>
        async function predictCareer() {
            const skills = document.getElementById('skills').value;
            const interests = document.getElementById('interests').value;
            const resultBox = document.getElementById('result-box');

            if (!skills || !interests) {
                resultBox.textContent = "Please fill in both fields.";
                resultBox.classList.add('show');
                return;
            }

            const skillInputs = skills.split(',');
            const interestInputs = interests.split(',');

            if (skillInputs.length !== 5 || interestInputs.length !== 5) {
                resultBox.textContent = "Each field must contain exactly 5 inputs.";
                resultBox.classList.add('show');
                return;
            }

            resultBox.textContent = "Processing...";
            resultBox.classList.add('show');

            try {
                const response = await fetch('https://f8c5-34-168-12-104.ngrok-free.app/predict', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ skills: skillInputs, interests: interestInputs }),
                });

                if (response.ok) {
                    const data = await response.json();
                    resultBox.textContent = `Recommended Career: ${data['Recommended Career']}`;
                } else {
                    throw new Error("Network response was not ok.");
                }
            } catch (error) {
                resultBox.textContent = "Error: Unable to fetch the prediction.";
            }
        }
    </script>
</body>
</html>
